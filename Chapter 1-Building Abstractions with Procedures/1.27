561
1105
1729
2465
2821
6601
#lang sicp
(define (square x)
  (* x x ))
(define (expmod base exp m)
  (cond ((= exp 0) 1)
        ((even? exp)
         (remainder (square (expmod base (/ exp 2) m))
                    m))
        (else
         (remainder (* base (expmod base (- exp 1) m))
                    m))))

(define (fermat-test n)
  (define (fermat-inator a n)
  (cond ((= a 0) #true)
        ((=(expmod a n n) a) (fermat-inator (- a 1) n))
        (else #false)))
  (fermat-inator (- n 1) n))
  

(fermat-test 7)
(fermat-test 11)
(fermat-test 1)


(fermat-test 561)
(fermat-test 1105)
(fermat-test 1729)
(fermat-test 2821)



#t
#t
#t
#t
#t
#t
#t
they all gave true lmao